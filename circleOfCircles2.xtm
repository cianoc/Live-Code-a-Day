(define glctx (gl:make-ctx ":0.0" #f 0.0 0.0 1280.0 800.0))

(bind-func initgl
  (lambda ()
    (glMatrixMode GL_PROJECTION)
    (glLoadIdentity)
    (glOrtho -12.8 12.8 -8. 8. -10.0 10.)
    (glMatrixMode GL_MODELVIEW)))

(initgl)

(bind-val counter double 0.0)
(bind-func inc_counter
  (lambda ()
    (set! counter (+ counter (ftod (dsp.left))))))

(bind-func dec_counter
  (lambda ()
    (set! counter (- counter 20.0))))


;;animation functions
(bind-func wave
	(lambda (wavelength:double amplitude:double)
		(* amplitude (+ 0.5 (* 0.5 (cos (/ (i64tod (now)) wavelength)))))))

(bind-func wave
	(lambda (wavelength:double amplitude:double)
		(* amplitude (+ 0.5 (* 0.5 (cos (/ (* 1000.0 (ftod (dsp.left))) wavelength)))))))

(bind-func wave
	(lambda (wavelength:double amplitude:double)
		(* amplitude (+ 0.5 (* 0.5 (cos (/ (+ (i64tod (now)) (* 100.0 counter)) wavelength)))))))

(bind-func wave
	(lambda (wavelength:double amplitude:double)
		(* amplitude (+ 0.5 (* 0.5 (cos (/ (* 100.0 counter) wavelength)))))))

(bind-func wave
	(lambda (wavelength:double amplitude:double)
		(* amplitude (+ 0.5 (* 0.5 (cos (/ (* 100.0 first_ring) wavelength)))))))

(bind-func color_wave
	(lambda (wavelength:double)
		(let ((gray:double (wave (- wavelength (wave wavelength 10.0)) 1.0)))
			(glColor3d gray 0.1 (* 0.5 gray)))))

;; my circle function
(bind-func circle
	(lambda (radius res)
		(glBegin GL_TRIANGLE_FAN)
		(let ((i:double 0.0))
			(dotimes (i res)
				(let ((radians (* (/ i res) 6.283)))
					(glVertex2d (* (sin radians) radius) 
            (* (cos radians) radius))))
		(glEnd))))

(bind-func circle
	(lambda (radius res)
		(glBegin GL_LINE_LOOP)
		(let ((i:double 0.0))
			(dotimes (i res)
				(let ((radians (* (/ i res) 6.283)))
					(glVertex2d (* (sin radians) (+ radius (wave (+ i 10000.0 ) 0.4))) 
            (* (cos radians) (+ radius (wave (+ i 10000.0 ) 0.4))))))
		(glEnd))))


;;ring
(bind-func ring
	(lambda (size:double n:double trans:double rot:double col:double)
		(let ((i:double 1.0))
      		(dotimes (i n)
		      (glPushMatrix)
		      (glRotated  (* i (/ 360.0 n)) 0.0 0.0 1.0)
		      (glTranslated 0.0  (+ trans size (wave (+ (* i col) 1000.0 ) 1.0)) 0.0)
		      ;(color_wave (+ i rot 30000.0))
		      (glPushMatrix)
			  ;(glRotated (wave (+ (* (wave 2000000.0 1.0) 1000.0) 100000.0 i) 360.0) (wave (+ 120000.0 i) 1.0) 1.0 0.0)
		      (glColor3d 0.0 (wave (+ (* i col) 10000.0 ) 0.5) 0.2)
		      (circle size 3.0)
		      (glPopMatrix)
		      (glPopMatrix)))))




(bind-val first_ring double 7.0)
(bind-val second_ring double 25.0)
(bind-val third_ring double 70.0)
(bind-val fourth_ring double 160.0)
(bind-val fifth_ring double 340.0)

(set! first_ring 70.0)
(set! second_ring  250.0)
(set! third_ring  700.0)
(set! fourth_ring  1600.0)
(set! fifth_ring  3400.0)

;;mandala
(bind-func mandala
	(lambda (size:double id:double)
		(glPushMatrix)
		(glScaled size size 1.0)

		;(color_wave 30000.0)
		(glColor3d 1.0 (wave 100000.0 0.5) 0.2)
		(glPushMatrix)
		(glRotated (wave 100000.0 360.0) 0.0 0.0 1.0)
		(circle 1.0 7.0)
		(glPopMatrix)

		;(glColor3d 0.8 (wave 110000.0 0.6) 0.4)
		(ring 0.75 7.0 1.0 7.0 (+ 2.0 id))

		;(glColor3d 0.7 (wave 120000.0 0.7) 0.3) 
		(ring 0.5 18.0 2.5 25.0 (+ 4.0 id))

		;(glColor3d 0.6 (wave 130000.0 0.8) 0.2)
		(ring 0.25 45.0 3.5 70.0 (+ 6.0 id))

		;(glColor3d 0.5 (wave 140000.0 0.9) 0.1)
		(ring 0.125 90.0 4.0 160.0 (+ 8.0 id))

		;(glColor3d 0.4 (wave 150000.0 1.0) 0.0)
		(ring 0.0625 180.0 4.25 340.0 (+ 10.0 id))


		(glPopMatrix)

		))

(bind-func circleOrMandala
	(lambda (size:double)
		(if (> size 0.75) (mandala size) (circle size 22.0))))

(bind-func mandala_ring
	(lambda (size:double n:double trans:double rot:double)
		(let ((i:double 1.0))
      		(dotimes (i n)
		      (glPushMatrix)
		      (glRotated  (+ (* i (/ 360.0 n)) rot) 0.0 0.0 1.0)
		      (glTranslated 0.0 (+ trans size (wave (+ i 10000.0 ) 1.0)) 0.0)
		      
      			;(glColor3d (wave (+ 20000.0 (* 1.5 i)) 1.0) (wave (+ 90000.0 (* 4.0 i)) 1.0) (wave (+ 50000.0 (* 1.0 i)) 1.0))
		      ;(glScaled size size 1.0)
		      ;(mandala2)
		      (mandala size i)
	
		      (glPopMatrix)))))




(wave 1000000 1.0)





(bind-func my-gl-loop
    (lambda ()
      (glClear (+ GL_COLOR_BUFFER_BIT GL_DEPTH_BUFFER_BIT))
      (glLoadIdentity)
           (inc_counter)
      ;(dec_counter)
      (glPushMatrix)
      (glScaled 0.5 0.5 1.0)
       (mandala 1.0 0.0)
      (mandala_ring 0.75 7.0 7.0 first_ring)
      (mandala_ring 0.5 19.0 13.0 second_ring)
      (mandala_ring 0.25 44.0 16.5 third_ring)
      (mandala_ring 0.125 90.0 18.25 fourth_ring)
     ; (mandala_ring 0.0625 180.0 19.25 fourth_ring)
      (glPopMatrix)


      ))



 ;(glTranslated 1.0 0.0 0.0)
     ;(glScaled 1.0 1.0 1.5)


;; standard impromptu callback                                                
(define opengl-test
  (lambda ()
    (my-gl-loop)
    (gl:swap-buffers glctx)
    (callback (+ (now) 500) 'opengl-test)))

(opengl-test)
